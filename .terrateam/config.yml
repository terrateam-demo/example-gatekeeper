# Directories (`dirs`)
# Define logical groupings of Terraform configurations.
# Tags allow dynamic selection of directories (e.g., "staging" and "compute").
dirs:
  staging/compute:
    tags: ["staging", "compute"]
  production/compute:
    tags: ["production", "compute"]
  security:
    when_modified:
      depends_on: "dir:network"

# Custom Workflows (`workflows`)
# Specifies workflows triggered based on tag queries.
workflows:
  - tag_query: "staging and compute"
    plan:
      - type: oidc
        provider: gcp
        service_account: "terrateam@terrateam-sandbox.iam.gserviceaccount.com"
        workload_identity_provider: "projects/811565105692/locations/global/workloadIdentityPools/terrateam-pool/providers/terrateam-provider"
      - type: init
      - type: plan
    apply:
      - type: oidc
        provider: gcp
        service_account: "terrateam@terrateam-sandbox.iam.gserviceaccount.com"
        workload_identity_provider: "projects/811565105692/locations/global/workloadIdentityPools/terrateam-pool/providers/terrateam-provider"
      - type: init
      - type: apply
  - tag_query: "production and compute"
    plan:
      - type: oidc
        provider: gcp
        service_account: "terrateam@terrateam-sandbox.iam.gserviceaccount.com"
        workload_identity_provider: "projects/811565105692/locations/global/workloadIdentityPools/terrateam-pool/providers/terrateam-provider"
      - type: init
      - type: plan
      - type: conftest
        visible_on: always
        gate:
          token: denied-resources
          any_of: ["team:engineering"]
          any_of_count: 1
    apply:
      - type: oidc
        provider: gcp
        service_account: "terrateam@terrateam-sandbox.iam.gserviceaccount.com"
        workload_identity_provider: "projects/811565105692/locations/global/workloadIdentityPools/terrateam-pool/providers/terrateam-provider"
      - type: init
      - type: apply

# RBAC (`access_control`)
# Controls permissions for specific actions such as planning, applying, and unlocking.
access_control:
  ci_config_update: ["team:sre"] # Only the SRE team can update CI configurations.
  policies:
    - tag_query: "staging and compute"
      plan: ["*"] # All users can plan for staging compute.
      apply: ["team:sre"] # Only the SRE team can apply for staging compute.
    - tag_query: "production and compute"
      plan: ["team:engineering"] # Engineering can plan for production compute.
      apply: ["team:sre"] # Only the SRE team can apply for production compute.
    - tag_query: ""
      plan: ["*"]
      apply: ["*"]
  terrateam_config_update: ["team:sre"] # Restricts config updates to the SRE team.
  unlock: ["team:sre"] # Only the SRE team can unlock runs.

# Apply Requirements (`apply_requirements`)
# Defines checks and approvals needed before applying changes.
apply_requirements:
  create_pending_apply_check: true # Automatically creates a pending check for apply actions.
  checks:
    - tag_query: "staging"
      approved:
        enabled: false # Approval not required for staging.
      merge_conflicts:
        enabled: true # Ensures no merge conflicts exist.
      status_checks:
        enabled: false # No status checks enforced for staging.
    - tag_query: "production"
      approved:
        enabled: false # Approval required for production.
        any_of: ["team:sre"] # Approval can only be provided by the SRE team.
      merge_conflicts:
        enabled: true
      status_checks:
        enabled: true
    - tag_query: ""
      approved:
        enabled: false
      merge_conflicts:
        enabled: true
      status_checks:
        enabled: false

# Automerge (`automerge`)
# Configures automatic merging behavior after successful applies.
automerge:
  enabled: false
  delete_branch: false # Retains the branch after merging.

# Engine (`engine`)
# Specifies the engine and its version.
engine:
  name: tofu
  version: 1.8.7

# Parallel Runs (`parallel_runs`)
# Specifies the number of parallel executions inside an operation.
parallel_runs: 3

# Automatic Module Discovery
indexer:
  enabled: false
